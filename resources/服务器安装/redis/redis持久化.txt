CSDN新首页上线啦，邀请你来立即体验！ 立即体验
博客
学院
下载
GitChat
更多

登录注册
redis的 rdb 和 aof 持久化的区别
转载 2014年06月11日 172447 19933
redis的 rdb 和 aof 持久化的区别

url httpptc.35.comp=275
aof，rdb是两种 redis持久化的机制。用于crash后，redis的恢复。
rdb的特性如下：
Code
fork一个进程，遍历hash table，利用copy on write，把整个db dump保存下来。
save, shutdown, slave 命令会触发这个操作。
粒度比较大，如果save, shutdown, slave 之前crash了，则中间的操作没办法恢复。
aof有如下特性：
Code
把写操作指令，持续的写到一个类似日志文件里。（类似于从postgresql等数据库导出sql一样，只记录写操作）
粒度较小，crash之后，只有crash之前没有来得及做日志的操作没办法恢复。
两种区别就是，一个是持续的用日志记录写操作，crash后利用日志恢复；一个是平时写操作的时候不触发写，只有手动提交save命令，或者是关闭命令时，才触发备份操作。
选择的标准，就是看系统是愿意牺牲一些性能，换取更高的缓存一致性（aof），还是愿意写操作频繁的时候，不启用备份来换取更高的性能，待手动运行save的时候，再做备份（rdb）。rdb这个就更有些 eventually consistent的意思了。
redis的 RDB 和 AOF 持久化的区别
 
redis的rdb和aof模式性能对比

url httpblog.sina.com.cnsblog_4458fdda010150bh.html
 
由于是同一台机器，进行相对对比，我就不列配置了。系统是debian testing，kernel 3.2 686。redis 2.4.8。
测试方法是用python写的脚本对redis数据库进行写入，看写入速度。
1000003000001000000是数据量，插入的都是string。第一个数据是最小时间，第二个是平均，第三个是数据大小。
100000
dbmode 4.8, 5.1, 1477792
aofmode 9.1, 9.3, 3677803
300000
dbmode 16.5, 17.6, 4877792
aofmode 21.1, 21.4, 11477803
1000000
dbmode 61, 65, 16777792
aofmode 77, 85, 38777849
从简单分析来看，aof比rdb慢25-80%，但是大规模数据都比较支持慢25%这端。估计在低数据量下，rdb模式更加占优势。数据规模增长时，速率比接近于45。aof的数据比rdb数据大150%（2.5倍上下），这点随着数据增长基本不变。
从读性能分析来看，两者差异不大。同样，数据分别是最小时间和平均时间。
dbmode 55, 60
aofmode 62, 63
差异在10%以内，甚至比最小-平均差异还弱。基本可以视为一致。
 
redis持久化RDB和AOF

url httpmy.oschina.netdaveheblog174662
Redis 持久化
提供了多种不同级别的持久化方式一种是RDB,另一种是AOF.
RDB 持久化可以在指定的时间间隔内生成数据集的时间点快照（point-in-time snapshot）。
AOF 持久化记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。 AOF 文件中的命令全部以 Redis 协议的格式来保存，新命令会被追加到文件的末尾。 Redis 还可以在后台对 AOF 文件进行重写（rewrite），使得 AOF 文件的体积不会超出保存数据集状态所需的实际大小。Redis 还可以同时使用 AOF 持久化和 RDB 持久化。 在这种情况下， 当 Redis 重启时， 它会优先使用 AOF 文件来还原数据集， 因为 AOF 文件保存的数据集通常比 RDB 文件所保存的数据集更完整。你甚至可以关闭持久化功能，让数据只在服务器运行时存在。

了解 RDB 持久化和 AOF 持久化之间的异同是非常重要的， 以下几个小节将详细地介绍这这两种持久化功能， 并对它们的相同和不同之处进行说明。
RDB 的优点
RDB 是一个非常紧凑（compact）的文件，它保存了 Redis 在某个时间点上的数据集。 这种文件非常适合用于进行备份： 比如说，你可以在最近的 24 小时内，每小时备份一次 RDB 文件，并且在每个月的每一天，也备份一个 RDB 文件。 这样的话，即使遇上问题，也可以随时将数据集还原到不同的版本。RDB 非常适用于灾难恢复（disaster recovery）：它只有一个文件，并且内容都非常紧凑，可以（在加密后）将它传送到别的数据中心，或者亚马逊 S3 中。RDB 可以最大化 Redis 的性能：父进程在保存 RDB 文件时唯一要做的就是 fork 出一个子进程，然后这个子进程就会处理接下来的所有保存工作，父进程无须执行任何磁盘 IO 操作。RDB 在恢复大数据集时的速度比 AOF 的恢复速度要快。

RDB 的缺点
如果你需要尽量避免在服务器故障时丢失数据，那么 RDB 不适合你。 虽然 Redis 允许你设置不同的保存点（save point）来控制保存 RDB 文件的频率， 但是， 因为RDB 文件需要保存整个数据集的状态， 所以它并不是一个轻松的操作。 因此你可能会至少 5 分钟才保存一次 RDB 文件。 在这种情况下， 一旦发生故障停机， 你就可能会丢失好几分钟的数据。每次保存 RDB 的时候，Redis 都要 fork() 出一个子进程，并由子进程来进行实际的持久化工作。 在数据集比较庞大时， fork() 可能会非常耗时，造成服务器在某某毫秒内停止处理客户端； 如果数据集非常巨大，并且 CPU 时间非常紧张的话，那么这种停止时间甚至可能会长达整整一秒。 虽然 AOF 重写也需要进行 fork() ，但无论 AOF 重写的执行间隔有多长，数据的耐久性都不会有任何损失。

AOF 的优点
使用 AOF 持久化会让 Redis 变得非常耐久（much more durable）：你可以设置不同的 fsync 策略，比如无 fsync ，每秒钟一次 fsync ，或者每次执行写入命令时 fsync 。AOF 的默认策略为每秒钟 fsync 一次，在这种配置下，Redis 仍然可以保持良好的性能，并且就算发生故障停机，也最多只会丢失一秒钟的数据（ fsync 会在后台线程执行，所以主线程可以继续努力地处理命令请求）。AOF 文件是一个只进行追加操作的日志文件（append only log）， 因此对 AOF 文件的写入不需要进行 seek ， 即使日志因为某些原因而包含了未写入完整的命令（比如写入时磁盘已满，写入中途停机，等等）， redis-check-aof 工具也可以轻易地修复这种问题。
Redis 可以在 AOF 文件体积变得过大时，自动地在后台对 AOF 进行重写： 重写后的新 AOF 文件包含了恢复当前数据集所需的最小命令集合。 整个重写操作是绝对安全的，因为 Redis 在创建新 AOF 文件的过程中，会继续将命令追加到现有的 AOF 文件里面，即使重写过程中发生停机，现有的 AOF 文件也不会丢失。 而一旦新 AOF 文件创建完毕，Redis 就会从旧 AOF 文件切换到新 AOF 文件，并开始对新 AOF 文件进行追加操作。AOF 文件有序地保存了对数据库执行的所有写入操作， 这些写入操作以 Redis 协议的格式保存， 因此 AOF 文件的内容非常容易被人读懂， 对文件进行分析（parse）也很轻松。 导出（export） AOF 文件也非常简单： 举个例子， 如果你不小心执行了 FLUSHALL 命令， 但只要 AOF 文件未被重写， 那么只要停止服务器， 移除 AOF 文件末尾的 FLUSHALL 命令， 并重启 Redis ， 就可以将数据集恢复到 FLUSHALL 执行之前的状态。

AOF 的缺点
对于相同的数据集来说，AOF 文件的体积通常要大于 RDB 文件的体积。根据所使用的 fsync 策略，AOF 的速度可能会慢于 RDB 。 在一般情况下， 每秒 fsync 的性能依然非常高， 而关闭 fsync 可以让 AOF 的速度和 RDB 一样快， 即使在高负荷之下也是如此。 不过在处理巨大的写入载入时，RDB 可以提供更有保证的最大延迟时间（latency）。AOF 在过去曾经发生过这样的 bug ： 因为个别命令的原因，导致 AOF 文件在重新载入时，无法将数据集恢复成保存时的原样。 （举个例子，阻塞命令 BRPOPLPUSH 就曾经引起过这样的 bug 。） 测试套件里为这种情况添加了测试： 它们会自动生成随机的、复杂的数据集， 并通过重新载入这些数据来确保一切正常。 虽然这种 bug 在 AOF 文件中并不常见， 但是对比来说， RDB 几乎是不可能出现这种 bug 的。
RDB 和 AOF ,我应该用哪一个？
一般来说,如果想达到足以媲美 PostgreSQL 的数据安全性， 你应该同时使用两种持久化功能。如果你非常关心你的数据,但仍然可以承受数分钟以内的数据丢失， 那么你可以只使用 RDB 持久化。有很多用户都只使用 AOF 持久化， 但我们并不推荐这种方式： 因为定时生成 RDB 快照（snapshot）非常便于进行数据库备份， 并且 RDB 恢复数据集的速度也要比 AOF 恢复的速度要快， 除此之外， 使用 RDB 还可以避免之前提到的 AOF 程序的 bug 。因为以上提到的种种原因， 未来我们可能会将 AOF 和 RDB 整合成单个持久化模型。 （这是一个长期计划。）
RDB 快照
在默认情况下， Redis 将数据库快照保存在名字为 dump.rdb 的二进制文件中。你可以对 Redis 进行设置， 让它在“ N 秒内数据集至少有 M 个改动”这一条件被满足时， 自动保存一次数据集。你也可以通过调用 SAVE 或者 BGSAVE ， 手动让 Redis 进行数据集保存操作。比如说， 以下设置会让 Redis 在满足“ 60 秒内有至少有 1000 个键被改动”这一条件时， 自动保存一次数据集：
save 60 1000
这种持久化方式被称为快照（snapshot）。

快照的运作方式
当 Redis 需要保存 dump.rdb 文件时， 服务器执行以下操作：
Redis 调用 fork() ，同时拥有父进程和子进程。
子进程将数据集写入到一个临时 RDB 文件中。
当子进程完成对新 RDB 文件的写入时，Redis 用新 RDB 文件替换原来的 RDB 文件，并删除旧的 RDB 文件。
这种工作方式使得 Redis 可以从写时复制（copy-on-write）机制中获益。
只进行追加操作的文件（append-only file，AOF）
快照功能并不是非常耐久（durable）： 如果 Redis 因为某些原因而造成故障停机， 那么服务器将丢失最近写入、且仍未保存到快照中的那些数据。尽管对于某些程序来说， 数据的耐久性并不是最重要的考虑因素， 但是对于那些追求完全耐久能力（full durability）的程序来说， 快照功能就不太适用了。
从 1.1 版本开始， Redis 增加了一种完全耐久的持久化方式： AOF 持久化。
你可以通过修改配置文件来打开 AOF 功能：
appendonly yes
从现在开始， 每当 Redis 执行一个改变数据集的命令时（比如 SET）， 这个命令就会被追加到 AOF 文件的末尾。
这样的话， 当 Redis 重新启时， 程序就可以通过重新执行 AOF 文件中的命令来达到重建数据集的目的。

AOF 重写
因为 AOF 的运作方式是不断地将命令追加到文件的末尾， 所以随着写入命令的不断增加， AOF 文件的体积也会变得越来越大。举个例子， 如果你对一个计数器调用了 100 次 INCR ， 那么仅仅是为了保存这个计数器的当前值， AOF 文件就需要使用 100 条记录（entry）。然而在实际上， 只使用一条 SET 命令已经足以保存计数器的当前值了， 其余 99 条记录实际上都是多余的。为了处理这种情况， Redis 支持一种有趣的特性： 可以在不打断服务客户端的情况下， 对 AOF 文件进行重建（rebuild）。执行 BGREWRITEAOF 命令， Redis 将生成一个新的 AOF 文件， 这个文件包含重建当前数据集所需的最少命令。
AOF 有多耐久？
你可以配置 Redis 多久才将数据 fsync 到磁盘一次。
有三个选项：
每次有新命令追加到 AOF 文件时就执行一次 fsync ：非常慢，也非常安全。
每秒 fsync 一次：足够快（和使用 RDB 持久化差不多），并且在故障时只会丢失 1 秒钟的数据。
从不 fsync ：将数据交给操作系统来处理。更快，也更不安全的选择。
推荐（并且也是默认）的措施为每秒 fsync 一次， 这种 fsync 策略可以兼顾速度和安全性。
总是 fsync 的策略在实际使用中非常慢， 即使在 Redis 2.0 对相关的程序进行了改进之后仍是如此 ―― 频繁调用 fsync 注定了这种策略不可能快得起来。
如果 AOF 文件出错了，怎么办？
服务器可能在程序正在对 AOF 文件进行写入时停机， 如果停机造成了 AOF 文件出错（corrupt）， 那么 Redis 在重启时会拒绝载入这个 AOF 文件， 从而确保数据的一致性不会被破坏。


当发生这种情况时， 可以用以下方法来修复出错的 AOF 文件：
为现有的 AOF 文件创建一个备份。
使用 Redis 附带的 redis-check-aof 程序，对原来的 AOF 文件进行修复。
$ redis-check-aof --fix
（可选）使用 diff -u 对比修复后的 AOF 文件和原始 AOF 文件的备份，查看两个文件之间的不同之处。
重启 Redis 服务器，等待服务器载入修复后的 AOF 文件，并进行数据恢复。
AOF 的运作方式
AOF 重写和 RDB 创建快照一样，都巧妙地利用了写时复制机制。
以下是 AOF 重写的执行步骤
Redis 执行 fork() ，现在同时拥有父进程和子进程。
子进程开始将新 AOF 文件的内容写入到临时文件。对于所有新执行的写入命令，父进程一边将它们累积到一个内存缓存中，一边将这些改动追加到现有 AOF 文件的末尾： 这样即使在重写的中途发生停机，现有的 AOF 文件也还是安全的。当子进程完成重写工作时，它给父进程发送一个信号，父进程在接收到信号之后，将内存缓存中的所有数据追加到新 AOF 文件的末尾。现在 Redis 原子地用新文件替换旧文件，之后所有命令都会直接追加到新 AOF 文件的末尾。

为最新的 dump.rdb 文件创建一个备份。
将备份放到一个安全的地方。
执行以下两条命令：
redis-cli CONFIG SET appendonly yes
redis-cli CONFIG SET save 
确保命令执行之后，数据库的键的数量没有改变。
确保写命令会被正确地追加到 AOF 文件的末尾。
步骤 3 执行的第一条命令开启了 AOF 功能： Redis 会阻塞直到初始 AOF 文件创建完成为止， 之后 Redis 会继续处理命令请求， 并开始将写入命令追加到 AOF 文件末尾。
步骤 3 执行的第二条命令用于关闭 RDB 功能。 这一步是可选的， 如果你愿意的话， 也可以同时使用 RDB 和 AOF 这两种持久化功能。
别忘了在 redis.conf 中打开 AOF 功能！ 否则的话， 服务器重启之后， 之前通过 CONFIG SET 设置的配置就会被遗忘， 程序会按原来的配置来启动服务器。
RDB 和 AOF 之间的相互作用
在版本号大于等于 2.4 的 Redis 中， BGSAVE 执行的过程中， 不可以执行 BGREWRITEAOF 。 反过来说， 在 BGREWRITEAOF 执行的过程中， 也不可以执行 BGSAVE 。
这可以防止两个 Redis 后台进程同时对磁盘进行大量的 IO 操作。
如果 BGSAVE 正在执行， 并且用户显示地调用 BGREWRITEAOF 命令， 那么服务器将向用户回复一个 OK 状态， 并告知用户， BGREWRITEAOF 已经被预定执行： 一旦 BGSAVE 执行完毕， BGREWRITEAOF 就会正式开始。当 Redis 启动时， 如果 RDB 持久化和 AOF 持久化都被打开了， 那么程序会优先使用 AOF 文件来恢复数据集， 因为 AOF 文件所保存的数据通常是最完整的。
备份 Redis 数据
Redis 对于数据备份是非常友好的， 因为你可以在服务器运行的时候对 RDB 文件进行复制： RDB 文件一旦被创建， 就不会进行任何修改。 当服务器要创建一个新的 RDB 文件时， 它先将文件的内容保存在一个临时文件里面， 当临时文件写入完毕时， 程序才使用  原子地用临时文件替换原来的 RDB 文件。这也就是说， 无论何时， 复制 RDB 文件都是绝对安全的。
 
目前您尚未登录，请 登录 或 注册 后进行评论
相关文章推荐
Redis持久化存储(AOF与RDB两种模式)

cache-only即只做为“缓存”服务，不持久数据，数据在服务终止后将消失，此模式下也将不存在“数据恢复”的手段，是一种安全性低效率高容易扩展的方式； persistence即为内存中的数据...
canotcanot2016年10月21日 20397782
Redis持久化-RDB与AOF

Redis持久化(Persistence)      Redis提供了不同持久化范围的选项：  RDB持久化以指定的时间间隔执行数据集的即时点(point-in-time)快照。AOF持久化在...
huwei2003huwei20032015年06月17日 14033450
 
月薪40k的前端程序员都避开了哪些坑？

程序员薪水有高有低，同样工作5年的程序员，有的人月薪30K、50K，有的人可能只有5K、8K。是什么因素导致了这种差异？
redis 持久化rdb aof 简介

redis 持久化rdb aof 简介 结合了几篇文章总结如下 1. rdb模式介绍【默认】 rdb方式的持久化是通过快照完成的，当符合一定条件时redsi会自动将内存中的所有数据进...
pangchengyong0724pangchengyong07242016年08月25日 0006352
RDB和AOF持久化对比

RBD和AOF持久化对比 RDB和AOF持久化对比 Redis提供了RDB持久化和AOF持久化，本篇文章中将会对这两种机制进行一些对比 RDB机制的优势和略施 RDB持久化是指在指定的时间间隔...
longxingzhiwenlongxingzhiwen2017年01月04日 1436354
Redis持久化，RDB和AOF

Redis强大的功能很大部分是由于他把数据缓存在内存中，为了使Redis在重启的时候，数据不丢失，就需要已某种方式把数据持久化到磁盘中。Redis持久化的方式有俩种，RDB和AOF。RDB：快照方式，...
yingxiakeyingxiake2016年06月14日 08192510
 
AI 工程师职业指南

我们请来商汤、杜邦、声智、希为、58同城、爱因互动、中科视拓、鲁朗软件等公司 AI 技术一线的专家，请他们从实践的角度来解析 AI 领域各技术岗位的合格工程师都是怎样炼成的。
redis持久化AOF与RDB配置

AOF保存的数据方案时最完整的，如果同时开启了rdb和aof下，会采用aof方式。 （1）设置数据保存到数据文件中的save规则 save 900 1     #900秒时...
qq924862077qq9248620772016年04月01日 23032663
redis的持久化方式RDB和AOF的区别

1、前言 最近在项目中使用到Redis做缓存，方便多个业务进程之间共享数据。由于Redis的数据都存放在内存中，如果没有配置持久化，redis重启后数据就全丢失了，于是需要开启redis的持久化功...
m0_38110132m0_381101322017年08月08日 1444224
Redis安全配置，以防数据库被入侵恶意清空，数据丢失，且dump.rdb文件无法恢复

最近比较衰，Redis数据库被好几次恶意攻击，导致里面的数据完全丢失。dump.rdb和appendonly.aof文件都不能恢复。一开始没有意识到数据库被攻击，后来几个数据库连续这样，才发现有问题。...
u014616233u0146162332017年01月11日 21511432
【Redis源码剖析】 - Redis持久化之RDB

Redis是一个高效的内存数据库，所有的数据都存放在内存中。我们知道，内存中的信息会随着进程的退出或机器的宕机而消失。为此，Redis提供了两种持久化机制：RDB和AOF。这两种持久化方式的原理实际上...
XiejingfaXiejingfa2016年06月02日 09509073
redis快照文件dump.rdb解析工具--redis-rdb-tools

redis-rdb-tools 是一个开源的解析redis快照文件dump.rdb的工具，解析出dump.rdb文件后可以用来做数据分析，redis数据恢复或者写入到其他key-value缓存系统中。...
yanshu2012yanshu20122016年01月21日 18003949
Redis数据持久化机制AOF原理分析之配置详解

Redis AOF数据持久化的参数配置详细注释
AcceptedxukaiAcceptedxukai2014年01月11日 125911995
RDB和AOF的区别和联系

RDB 持久化可以在指定的时间间隔内生成数据集的时间点快照 优势  RDB 是一个非常紧凑（compact）的文件，它保存了 Redis 在某个时间点上的数据集。 这种文件非常适合用...
longxingzhiwenlongxingzhiwen2017年01月04日 1433675
redis的持久化方式 RDB和AOF

RDB是Snapshot快照存储，半持久化模式 按周期策将数据保持在磁盘（save来定义周期），借助fork命令的copy on write机制。 生成快照时，当前进程会fork一个子进程，然后再子进...
weiwenjuan0923weiwenjuan09232016年10月21日 2042243
【Redis源码剖析】 - Redis持久化之AOF

Redis提供了两种持久化方法：RDB和AOF。在前面一篇文章中我们已经介绍过RDB持久化机制，今天我们来看看AOF持久化方法。本文主要涉及aof.c文件。...
XiejingfaXiejingfa2016年06月12日 18247413
redis的aof持久化深入解析

Redis提供两种持久化方式，RDB和AOF；与RDB不同，AOF可以完整的记录整个数据库，而不像RDB只是数据库某一时刻的快照;  那么AOF模式为什么可以完整的记录整个数据库呢？  原理：在A...
Erica_1230Erica_12302016年05月03日 1613718
Redis的AOF功能

引言： Redis是基于内存的数据库，同时也提供了若干持久化的方案，允许用户把内存中的数据，写入本地文件系统，以备下次重启或者当机之后继续使用。本文将描述如何基于Redis来设置AOF功能...
blueheart20blueheart202014年05月22日 001428622
RDB和AOF持久化对比

Redis提供了RDB持久化和AOF持久化，本篇文章中将会对这两种机制进行一些对比 RDB机制的优势和略施 RDB持久化是指在指定的时间间隔内将内存中的数据集快照写入磁盘。 也是默认的持久...
myhuashengmimyhuashengmi2016年09月17日 1627523
redis的持久化：AOF的配置和原理

RDB最大的不足之处在于：一旦数据库出现问题，由于RDB文件中保存的数据并不是全新的。从上次RDB文件生成到redis宕机，这段时间的数据全部丢掉了(因为刷写机制还没有出发)。AOF比RDB有更好的持...
aitangyongaitangyong2016年07月30日 15354818
Redis数据库的dump备份与aof备份

Redis自动备份有两种方式，第一种是通过dump.rdb文件实现备份，另外一种使用aof文件实现自动备份。Dump.rdb备份Redis中默认使用dump.rdb文件实现备份，如果aof备份没有打开...
u014616233u0146162332017年01月13日 1703915
Redis入门之浅谈aof持久化机制

redis中的持久化策略之浅谈aof
candy_rainbowcandy_rainbow2016年10月12日 2247681
 
jackpk

＋关注
原创
86
 
粉丝
222
 
喜欢
0
 
码云
未开通
他的最新文章更多文章
mybatis查询sql：where语句“查询时间字段书写问题”引发的索引失效
详解Twitter开源分布式自增ID算法snowflake(附演算验证过程)
项目管理的“三边六拍”
相关推荐

Redis持久化存储(AOF与RDB两种模式)
Redis持久化-RDB与AOF
redis 持久化rdb aof 简介
RDB和AOF持久化对比


在线课程

Python全栈工程师
Python全栈工程师
作者：韦玮
人工智能工程师直通车
人工智能工程师直通车
作者：卿来云
Web前端工程师
Web前端工程师
作者：曾亮


他的热门文章

spring mvc 请求转发和重定向
321816
EXCEL 一组数据筛选出重复的数据去重
181187
使用URLEncoder、URLDecoder进行URL参数的转码与解码
68476
SpringMVC从Controller跳转到另一个Controller
58330
谷歌被封锁？ Google( www.google.com.hk)上不去之解决~
53169

3
 
 
 
 
内容举报
返回顶部

