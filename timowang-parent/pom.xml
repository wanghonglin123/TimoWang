<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
    </parent>
    <groupId>com.timowang</groupId>
    <artifactId>timowang-parent</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <!-- 常量配置 begin-->
    <properties>
        <jdk.version>1.8</jdk.version>
        <flogger.version>1.0.2</flogger.version>
        <timowang-version>1.0.0</timowang-version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <commons-io.version>2.5</commons-io.version>
        <commons-net.version>3.3</commons-net.version>
        <commons-collections4.version>4.1</commons-collections4.version>
    </properties>
    <!-- 常量配置 end-->

    <dependencies>
        <!-- springboot 核心 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!-- 用於打包好的war包可以在外部tomcat運行，注释掉用于快速开发，热部署-->
            <!--<scope>provided</scope>-->
        </dependency>

        <!-- Spring boot 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${timowang-version}</version>
        </dependency>

        <!-- 引入spring boot自带的pagehelper插件 -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!--spring-boot-configuration:spring boot 配置处理器; -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <!-- jar包依赖 begin-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.timowang</groupId>
                <artifactId>timowang-common</artifactId>
                <version>${timowang-version}</version>
            </dependency>

            <!-- 基于双缓冲队列、多刷盘机制的超轻量级 Java 日志 -->
            <dependency>
                <groupId>com.github.cyfonly</groupId>
                <artifactId>flogger</artifactId>
                <version>${flogger.version}</version>
            </dependency>

            <dependency>
                <groupId>com.timowang</groupId>
                <artifactId>timowang-dao</artifactId>
                <version>${timowang-version}</version>
            </dependency>

            <dependency>
                <groupId>com.timowang</groupId>
                <artifactId>timowang-interfaces</artifactId>
                <version>${timowang-version}</version>
            </dependency>

            <dependency>
                <groupId>com.timowang</groupId>
                <artifactId>timowang-pojo</artifactId>
                <version>${timowang-version}</version>
            </dependency>

            <dependency>
                <groupId>com.timowang</groupId>
                <artifactId>timowang-ext</artifactId>
                <version>${timowang-version}</version>
            </dependency>

            <dependency>
                <groupId>com.timowang</groupId>
                <artifactId>timowang-member-service</artifactId>
                <version>${timowang-version}</version>
            </dependency>
            <!-- mysql驱动包 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.29</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.20</version>
            </dependency>

            <!-- shiro-all -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-all</artifactId>
                <version>1.3.2</version>
            </dependency>

            <!-- Redis客户端 -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>2.9.0</version>
            </dependency>

            <!-- Apache工具组件 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- jar包依赖 end-->

    <!-- 构建过程需要的配置 begin-->
    <build>
        <finalName>${project.artifactId}</finalName>
        <!-- maven install 跳过test方法 , Begin -->
        <defaultGoal>compile</defaultGoal>
        <!-- maven install 跳过test方法 , End -->

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- maven install 跳过test方法 , End -->

            <!-- 资源文件拷贝插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!--<version>2.7</version>-->
                <version>3.0.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- Java编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!--<version>3.2</version>-->
                <version>3.6.1</version>
                <configuration>
                    <!-- <source>1.7</source> -->
                    <source>${jdk.version}</source>
                    <!-- <target>1.7</target> -->
                    <target>${jdk.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- 配置Tomcat插件，使用Tomcat插件之后，本地就不需要单独安装Tomcat了 -->
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <!-- 构建过程需要的配置 end-->

    <!-- 多套环境配置 begin-->
    <profiles>
        <!-- 开发环境  -->
        <profile>
            <id>dev</id>
            <!-- 必须设置一个环境，否则参数报错，设置为默认激活  -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
            </properties>
        </profile>
    </profiles>
    <!-- 多套环境配置 end-->
</project>